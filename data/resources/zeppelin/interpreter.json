{
  "interpreterSettings": {
    "2BXPCAUQD": {
      "id": "2BXPCAUQD",
      "name": "sh",
      "group": "sh",
      "properties": {
        "zeppelin.shell.keytab.location": "",
        "shell.command.timeout.millisecs": "60000",
        "zeppelin.shell.principal": "",
        "zeppelin.shell.auth.type": ""
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "sh",
          "class": "org.apache.zeppelin.shell.ShellInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BW2CDU3X": {
      "id": "2BW2CDU3X",
      "name": "spark",
      "group": "spark",
      "properties": {
        "spark.executor.memory": "",
        "args": "",
        "zeppelin.spark.printREPLOutput": "true",
        "spark.cores.max": "",
        "zeppelin.dep.additionalRemoteRepository": "spark-packages,http://dl.bintray.com/spark-packages/maven,false;",
        "zeppelin.spark.sql.stacktrace": "false",
        "zeppelin.spark.importImplicit": "true",
        "zeppelin.spark.concurrentSQL": "false",
        "zeppelin.spark.useHiveContext": "true",
        "zeppelin.pyspark.python": "python",
        "zeppelin.dep.localrepo": "local-repo",
        "zeppelin.R.knitr": "true",
        "zeppelin.spark.maxResult": "1000",
        "master": "local[*]",
        "spark.app.name": "Zeppelin",
        "zeppelin.R.image.width": "100%",
        "zeppelin.R.render.options": "out.format \u003d \u0027html\u0027, comment \u003d NA, echo \u003d FALSE, results \u003d \u0027asis\u0027, message \u003d F, warning \u003d F",
        "zeppelin.R.cmd": "R"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "spark",
          "class": "org.apache.zeppelin.spark.SparkInterpreter",
          "defaultInterpreter": true
        },
        {
          "name": "sql",
          "class": "org.apache.zeppelin.spark.SparkSqlInterpreter",
          "defaultInterpreter": false
        },
        {
          "name": "dep",
          "class": "org.apache.zeppelin.spark.DepInterpreter",
          "defaultInterpreter": false
        },
        {
          "name": "pyspark",
          "class": "org.apache.zeppelin.spark.PySparkInterpreter",
          "defaultInterpreter": false
        },
        {
          "name": "r",
          "class": "org.apache.zeppelin.spark.SparkRInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BX6SC4XF": {
      "id": "2BX6SC4XF",
      "name": "hbase",
      "group": "hbase",
      "properties": {
        "zeppelin.hbase.test.mode": "false",
        "hbase.ruby.sources": "lib/ruby",
        "hbase.home": "/usr/lib/hbase/"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "hbase",
          "class": "org.apache.zeppelin.hbase.HbaseInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BW98ZWFK": {
      "id": "2BW98ZWFK",
      "name": "jdbc",
      "group": "jdbc",
      "properties": {
        "phoenix.user": "phoenixuser",
        "hive.url": "jdbc:hive2://localhost:10000",
        "psql.password": "",
        "phoenix.driver": "org.apache.phoenix.jdbc.PhoenixDriver",
        "default.driver": "org.postgresql.Driver",
        "hive.user": "hive",
        "psql.user": "phoenixuser",
        "psql.url": "jdbc:postgresql://localhost:5432/",
        "default.user": "gpadmin",
        "phoenix.hbase.client.retries.number": "1",
        "phoenix.url": "jdbc:phoenix:localhost:2181:/hbase-unsecure",
        "tajo.url": "jdbc:tajo://localhost:26002/default",
        "tajo.driver": "org.apache.tajo.jdbc.TajoDriver",
        "psql.driver": "org.postgresql.Driver",
        "default.password": "",
        "zeppelin.jdbc.auth.type": "",
        "zeppelin.jdbc.concurrent.use": "true",
        "hive.password": "",
        "hive.driver": "org.apache.hive.jdbc.HiveDriver",
        "zeppelin.jdbc.keytab.location": "",
        "common.max_count": "1000",
        "phoenix.password": "",
        "zeppelin.jdbc.principal": "",
        "zeppelin.jdbc.concurrent.max_connection": "10",
        "default.url": "jdbc:postgresql://localhost:5432/"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "sql",
          "class": "org.apache.zeppelin.jdbc.JDBCInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BTWJZRSS": {
      "id": "2BTWJZRSS",
      "name": "elasticsearch",
      "group": "elasticsearch",
      "properties": {
        "elasticsearch.result.size": "10",
        "elasticsearch.port": "9300",
        "elasticsearch.cluster.name": "elasticsearch",
        "elasticsearch.host": "localhost"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "elasticsearch",
          "class": "org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BW2UCQ2H": {
      "id": "2BW2UCQ2H",
      "name": "flink",
      "group": "flink",
      "properties": {
        "port": "6123",
        "host": "local"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "flink",
          "class": "org.apache.zeppelin.flink.FlinkInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BW6A1GFP": {
      "id": "2BW6A1GFP",
      "name": "bigquery",
      "group": "bigquery",
      "properties": {
        "zeppelin.bigquery.max_no_of_rows": "100000",
        "zeppelin.bigquery.wait_time": "5000",
        "zeppelin.bigquery.project_id": " "
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "sql",
          "class": "org.apache.zeppelin.bigquery.BigQueryInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BUMVV6S4": {
      "id": "2BUMVV6S4",
      "name": "md",
      "group": "md",
      "properties": {},
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "md",
          "class": "org.apache.zeppelin.markdown.Markdown",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BVU4PF58": {
      "id": "2BVU4PF58",
      "name": "lens",
      "group": "lens",
      "properties": {
        "lens.session.cluster.user": "default",
        "zeppelin.lens.maxResults": "1000",
        "lens.query.enable.persistent.resultset": "false",
        "lens.client.dbname": "default",
        "zeppelin.lens.maxThreads": "10",
        "lens.server.base.url": "http://\u003chostname\u003e:\u003cport\u003e/lensapi",
        "zeppelin.lens.run.concurrent": "true"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "lens",
          "class": "org.apache.zeppelin.lens.LensInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BWCPX8G4": {
      "id": "2BWCPX8G4",
      "name": "cassandra",
      "group": "cassandra",
      "properties": {
        "cassandra.query.default.consistency": "ONE",
        "cassandra.pooling.max.connection.per.host.local": "8",
        "cassandra.load.balancing.policy": "DEFAULT",
        "cassandra.pooling.new.connection.threshold.local": "100",
        "cassandra.credentials.password": "none",
        "cassandra.native.port": "9042",
        "cassandra.hosts": "localhost",
        "cassandra.pooling.core.connection.per.host.local": "2",
        "cassandra.retry.policy": "DEFAULT",
        "cassandra.pooling.pool.timeout.millisecs": "5000",
        "cassandra.protocol.version": "4",
        "cassandra.pooling.core.connection.per.host.remote": "1",
        "cassandra.pooling.new.connection.threshold.remote": "100",
        "cassandra.pooling.max.request.per.connection.remote": "256",
        "cassandra.cluster": "Test Cluster",
        "cassandra.speculative.execution.policy": "DEFAULT",
        "cassandra.pooling.max.request.per.connection.local": "1024",
        "cassandra.compression.protocol": "NONE",
        "cassandra.query.default.fetchSize": "5000",
        "cassandra.pooling.idle.timeout.seconds": "120",
        "cassandra.keyspace": "system",
        "cassandra.max.schema.agreement.wait.second": "10",
        "cassandra.socket.tcp.no_delay": "true",
        "cassandra.credentials.username": "none",
        "cassandra.socket.connection.timeout.millisecs": "5000",
        "cassandra.interpreter.parallelism": "10",
        "cassandra.query.default.serial.consistency": "SERIAL",
        "cassandra.pooling.max.connection.per.host.remote": "2",
        "cassandra.pooling.heartbeat.interval.seconds": "30",
        "cassandra.reconnection.policy": "DEFAULT",
        "cassandra.socket.read.timeout.millisecs": "12000"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "cassandra",
          "class": "org.apache.zeppelin.cassandra.CassandraInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BVP7PMAY": {
      "id": "2BVP7PMAY",
      "name": "psql",
      "group": "psql",
      "properties": {
        "postgresql.driver.name": "org.postgresql.Driver",
        "postgresql.password": "",
        "postgresql.url": "jdbc:postgresql://localhost:5432/",
        "postgresql.max.result": "1000",
        "postgresql.user": "gpadmin"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "sql",
          "class": "org.apache.zeppelin.postgresql.PostgreSqlInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BURX3YCZ": {
      "id": "2BURX3YCZ",
      "name": "alluxio",
      "group": "alluxio",
      "properties": {
        "alluxio.master.port": "19998",
        "alluxio.master.hostname": "localhost"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "alluxio",
          "class": "org.apache.zeppelin.alluxio.AlluxioInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BUBB3QGG": {
      "id": "2BUBB3QGG",
      "name": "file",
      "group": "file",
      "properties": {
        "hdfs.maxlength": "1000",
        "hdfs.user": "hdfs",
        "hdfs.url": "http://localhost:50070/webhdfs/v1/"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "hdfs",
          "class": "org.apache.zeppelin.file.HDFSFileInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BX78GAPA": {
      "id": "2BX78GAPA",
      "name": "python",
      "group": "python",
      "properties": {
        "zeppelin.python": "python",
        "zeppelin.python.maxResult": "1000"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "python",
          "class": "org.apache.zeppelin.python.PythonInterpreter",
          "defaultInterpreter": false
        },
        {
          "name": "sql",
          "class": "org.apache.zeppelin.python.PythonInterpreterPandasSql",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BUQ3KZZV": {
      "id": "2BUQ3KZZV",
      "name": "angular",
      "group": "angular",
      "properties": {},
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "angular",
          "class": "org.apache.zeppelin.angular.AngularInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BUTCR81T": {
      "id": "2BUTCR81T",
      "name": "ignite",
      "group": "ignite",
      "properties": {
        "ignite.peerClassLoadingEnabled": "true",
        "ignite.config.url": "",
        "ignite.jdbc.url": "jdbc:ignite:cfg://default-ignite-jdbc.xml",
        "ignite.clientMode": "true",
        "ignite.addresses": "127.0.0.1:47500..47509"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "ignite",
          "class": "org.apache.zeppelin.ignite.IgniteInterpreter",
          "defaultInterpreter": true
        },
        {
          "name": "ignitesql",
          "class": "org.apache.zeppelin.ignite.IgniteSqlInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BU7EJBMA": {
      "id": "2BU7EJBMA",
      "name": "livy",
      "group": "livy",
      "properties": {
        "livy.spark.executor.memory": "",
        "zeppelin.livy.principal": "",
        "livy.spark.master": "local[*]",
        "zeppelin.livy.spark.sql.maxResult": "1000",
        "zeppelin.livy.keytab": "",
        "zeppelin.livy.concurrentSQL": "false",
        "livy.spark.executor.cores": "",
        "zeppelin.livy.create.session.retries": "120",
        "zeppelin.livy.url": "http://localhost:8998",
        "livy.spark.dynamicAllocation.minExecutors": "",
        "livy.spark.driver.cores": "",
        "livy.spark.jars.packages": "",
        "livy.spark.dynamicAllocation.enabled": "",
        "livy.spark.executor.instances": "",
        "livy.spark.dynamicAllocation.cachedExecutorIdleTimeout": "",
        "livy.spark.dynamicAllocation.maxExecutors": "",
        "livy.spark.dynamicAllocation.initialExecutors": "",
        "livy.spark.driver.memory": ""
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "spark",
          "class": "org.apache.zeppelin.livy.LivySparkInterpreter",
          "defaultInterpreter": true
        },
        {
          "name": "sql",
          "class": "org.apache.zeppelin.livy.LivySparkSQLInterpreter",
          "defaultInterpreter": false
        },
        {
          "name": "pyspark",
          "class": "org.apache.zeppelin.livy.LivyPySparkInterpreter",
          "defaultInterpreter": false
        },
        {
          "name": "sparkr",
          "class": "org.apache.zeppelin.livy.LivySparkRInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BUK6P2XU": {
      "id": "2BUK6P2XU",
      "name": "mahout",
      "group": "mahout",
      "properties": {
        "mahout.version": "0.12.2",
        "spark.kryoserializer.buffer.max": "512m",
        "spark.kryo.registrator": "org.apache.mahout.sparkbindings.io.MahoutKryoRegistrator",
        "spark.cores.max": "",
        "zeppelin.spark.printREPLOutput": "true",
        "master": "local[*]",
        "mahout.home": "local",
        "zeppelin.spark.maxResult": "1000",
        "zeppelin.dep.localrepo": "local-repo",
        "spark.kryoserializer.buffer": "64k",
        "spark.app.name": "Zeppelin-Mahout",
        "spark.executor.memory": "",
        "spark.kryo.referenceTracking": "false",
        "zeppelin.spark.useHiveContext": "true",
        "args": "",
        "spark.serializer": "org.apache.spark.serializer.KryoSerializer"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "mahout",
          "class": "org.apache.zeppelin.mahout.MahoutSparkInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    },
    "2BX3PYKRU": {
      "id": "2BX3PYKRU",
      "name": "kylin",
      "group": "kylin",
      "properties": {
        "kylin.api.password": "KYLIN",
        "kylin.query.limit": "5000",
        "kylin.api.user": "ADMIN",
        "kylin.query.offset": "0",
        "kylin.query.project": "default",
        "kylin.query.ispartial": "true",
        "kylin.api.url": "http://\u003chost\u003e:\u003cport\u003e/kylin/api/query"
      },
      "status": "READY",
      "interpreterGroup": [
        {
          "name": "kylin",
          "class": "org.apache.zeppelin.kylin.KylinInterpreter",
          "defaultInterpreter": false
        }
      ],
      "dependencies": [],
      "option": {
        "remote": true,
        "port": -1,
        "perNoteSession": false,
        "perNoteProcess": false,
        "isExistingProcess": false,
        "setPermission": false
      }
    }
  },
  "interpreterBindings": {},
  "interpreterRepositories": [
    {
      "id": "central",
      "type": "default",
      "url": "http://repo1.maven.org/maven2/",
      "releasePolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "snapshotPolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "mirroredRepositories": [],
      "repositoryManager": false
    },
    {
      "id": "local",
      "type": "default",
      "url": "file:///home/guest/.m2/repository",
      "releasePolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "snapshotPolicy": {
        "enabled": true,
        "updatePolicy": "daily",
        "checksumPolicy": "warn"
      },
      "mirroredRepositories": [],
      "repositoryManager": false
    }
  ]
}